swagger: "2.0"
info:
  title: "쫑이까까후원재단 API"
  version: "1.0.0"
  description: "멸종위기종 보호를 위한 REST API 문서"

basePath: "/"
schemes:
  - "http"
  - "https"

tags:
  - name: "Admin Login"
    description: "관리자 로그인 관련 API"
  - name: "Project"
    description: "프로젝트 관련 API"
  - name: "AI Detection"
    description: "AI 객체 탐지 관련 API"
  - name: "Exception"
    description: "예외 처리 관련 API"
  - name: "Favorite"
    description: "즐겨찾기 관련 API"
  - name: "Upload"
    description: "파일 업로드 관련 API"

paths:
  /admin/login:
    post:
      tags:
        - "Admin Login"
      summary: "관리자 로그인"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "로그인 데이터"
          required: true
          schema:
            type: "object"
            properties:
              username:
                type: "string"
                example: "admin"
              password:
                type: "string"
                example: "password"
      responses:
        200:
          description: "로그인 성공"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
                example: "로그인 성공"
              token:
                type: "string"
                example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"


  /files/upload:
    post:
      tags:
        - Upload
      summary: 이미지 파일 업로드
      description: |
        다중 이미지 파일을 업로드합니다.
        - 지원 파일 형식: jpg
        - 최대 파일 크기: 10MB
        - 썸네일 크기: 200x200
      security:
        - Bearer: []
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: files
          type: array
          items:
            type: file
          required: true
          description: 업로드할 이미지 파일들
        - in: formData
          name: project_info
          type: string
          required: true
          description: 프로젝트 정보 (JSON 문자열)
          example: '{"project_id": "507f1f77bcf86cd799439011"}'
      responses:
        200:
          description: 파일 업로드 성공
          schema:
            type: object
            properties:
              message:
                type: string
                example: "파일 업로드 성공"
              data:
                type: object
                properties:
                  uploaded_files:
                    type: array
                    items:
                      type: object
                      properties:
                        filename:
                          type: string
                        path:
                          type: string
                        thumbnail:
                          type: string
                        project_id:
                          type: string
                        image_id:
                          type: string
                  image_ids:
                    type: array
                    items:
                      type: string
        400:
          description: 잘못된 요청
          schema:
            $ref: '#/definitions/Error'
        500:
          description: 서버 오류
          schema:
            $ref: '#/definitions/Error'

  /files/parse-exif:
    post:
      tags:
        - Upload
      summary: 업로드된 파일의 EXIF 데이터 파싱
      security:
        - Bearer: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              image_ids:
                type: array
                items:
                  type: string
                description: 파싱할 이미지 ID 목록
              timeout:
                type: integer
                description: 파싱 타임아웃 시간(초)
                default: 30
      responses:
        200:
          description: EXIF 파싱 성공
          schema:
            type: object
            properties:
              message:
                type: string
                example: "EXIF 파싱이 완료되었습니다"
              data:
                type: object
                properties:
                  total_images:
                    type: integer
                  parsed_count:
                    type: integer
                  parsed_images:
                    type: array
                    items:
                      type: object
                      properties:
                        image_id:
                          type: string
                        filename:
                          type: string
                        serial_number:
                          type: string
                        datetime:
                          type: string
                        evtnum:
                          type: integer
        400:
          description: 잘못된 요청
          schema:
            $ref: '#/definitions/Error'
        408:
          description: 요청 시간 초과
          schema:
            type: object
            properties:
              message:
                type: string
                example: "EXIF 파싱 시간이 초과되었습니다"
              data:
                type: object
                properties:
                  timeout:
                    type: integer
                  image_count:
                    type: integer
        500:
          description: 서버 오류
          schema:
            $ref: '#/definitions/Error'

  /images:
    get:
      tags:
        - Classification
      summary: "이미지 목록 조회"
      description: "이미지의 분류 상태를 기준으로 필터링하고 페이지네이션하여 목록을 조회합니다."
      produces:
        - "application/json"
      parameters:
        - name: classified
          in: query
          description: "이미지가 분류되었는지 여부를 필터링합니다 (true/false)."
          required: false
          type: string
          enum: [true, false]
        - name: page
          in: query
          description: "페이지 번호"
          required: false
          type: integer
          default: 1
        - name: per_page
          in: query
          description: "한 페이지에 표시할 이미지 수"
          required: false
          type: integer
          default: 10
      responses:
        "200":
          description: "이미지 목록 조회 성공"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "이미지 목록 조회 성공"
              data:
                type: object
                properties:
                  images:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          example: "60c72b2f9e1b8b001f1b4a8a"
                        name:
                          type: string
                          example: "example_image.jpg"
                        is_classified:
                          type: boolean
                          example: true
                        created_at:
                          type: string
                          format: date-time
                          example: "2025-02-10T14:48:00.000Z"
              meta:
                type: object
                properties:
                  total:
                    type: integer
                    example: 100
                  page:
                    type: integer
                    example: 1
                  per_page:
                    type: integer
                    example: 10
        "400":
          description: "유효하지 않은 요청 (예: 페이지 번호 오류)"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "페이지 번호가 유효하지 않습니다."
              error_type:
                type: string
                example: "validation_error"
        "500":
          description: "서버 오류"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "서버 오류가 발생했습니다."
              error_type:
                type: string
                example: "db_error"

  /classified-images/{image_id}:
    get:
      tags:
        - Classification
      summary: 분류된 이미지 상세 정보 조회
      security:
        - Bearer: []
      parameters:
        - in: path
          name: image_id
          required: true
          type: string
          description: 이미지 ID
      responses:
        200:
          description: 이미지 상세 정보 조회 성공
          schema:
            $ref: '#/definitions/ClassifiedImage'
        404:
          description: 이미지를 찾을 수 없음

    delete:
      tags:
        - Classification
      summary: 분류된 이미지 삭제
      security:
        - Bearer: []
      parameters:
        - in: path
          name: image_id
          required: true
          type: string
          description: 삭제할 이미지 ID
      responses:
        200:
          description: 이미지 삭제 성공
        404:
          description: 이미지를 찾을 수 없음

  # Search 관련 엔드포인트
  /inspection/normal/search:
    get:
      tags:
        - Search
      summary: 일반 검수 이미지 검색
      security:
        - Bearer: []
      parameters:
        - in: query
          name: project_name
          type: string
          description: 프로젝트 이름
        - in: query
          name: date
          type: string
          description: 검색할 날짜 (YYYY-MM-DD)
        - in: query
          name: serial_number
          type: string
          description: 카메라 시리얼 번호
        - in: query
          name: species
          type: string
          description: 동물 종
        - in: query
          name: page
          type: integer
          default: 1
        - in: query
          name: per_page
          type: integer
          default: 20
      responses:
        200:
          description: 검색 성공
          schema:
            type: object
            properties:
              message:
                type: string
              data:
                type: object
                properties:
                  images:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        filename:
                          type: string
                        thumbnail:
                          type: string
                        date:
                          type: string
                        serial_number:
                          type: string
                        species:
                          type: string
                        project_name:
                          type: string
                        count:
                          type: integer
                        event_number:
                          type: integer
                        is_classified:
                          type: boolean
                          default: true
              meta:
                type: object
                properties:
                  total:
                    type: integer
                  page:
                    type: integer
                  per_page:
                    type: integer
                  total_pages:
                    type: integer

  /inspection/exception/search:
    get:
      tags:
        - Search
      summary: 예외 검수 이미지 검색
      description: "프로젝트명, 날짜, 시리얼 번호 등 조건에 따라 미분류 예외 검수 이미지를 검색합니다. (기본적으로 미분류 이미지만 검색됩니다)"
      security:
        - Bearer: []
      parameters:
        - name: project_name
          in: query
          type: string
          required: false
          description: "검색할 프로젝트 이름 (부분 일치)"
        - name: date
          in: query
          type: string
          required: false
          description: "검색할 날짜 (YYYY-MM-DD 형식)"
          format: date
        - name: serial_number
          in: query
          type: string
          required: false
          description: "검색할 시리얼 번호 (부분 일치)"
        - name: exception_status
          in: query
          type: string
          required: false
          description: "예외 상태"
          enum: ["pending", "approved", "rejected"]
        - name: page
          in: query
          type: integer
          required: false
          description: "페이지 번호"
          default: 1
        - name: per_page
          in: query
          type: integer
          required: false
          description: "한 페이지당 결과 개수"
          default: 12
      responses:
        "200":
          description: "검색 결과 반환 성공"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "검색이 성공적으로 완료되었습니다"
              data:
                type: object
                properties:
                  images:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "60c72b2f9e1b8b001f1b4a8a"
                        filename:
                          type: string
                          example: "example_image.jpg"
                        thumbnail:
                          type: string
                          example: "/path/to/thumbnail.jpg"
                        date:
                          type: string
                          format: date
                          example: "2025-02-10"
                        serial_number:
                          type: string
                          example: "12345XYZ"
                        project_name:
                          type: string
                          example: "환경보호 프로젝트"
                        exception_status:
                          type: string
                          enum: ["pending", "approved", "rejected"]
                          example: "pending"
                        event_number:
                          type: integer
                          example: 5
                        is_classified:
                          type: boolean
                          example: false
              meta:
                type: object
                properties:
                  total:
                    type: integer
                    example: 100
                  page:
                    type: integer
                    example: 1
                  per_page:
                    type: integer
                    example: 12
        "400":
          description: "잘못된 요청 (예: 날짜 형식 오류)"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "유효하지 않은 요청입니다"
        "500":
          description: "서버 오류"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "서버 오류가 발생했습니다"


  # Download 관련 엔드포인트
  /download/image/{image_id}:
    get:
      tags:
        - Download
      summary: 단일 이미지 다운로드
      security:
        - Bearer: []
      parameters:
        - in: path
          name: image_id
          required: true
          type: string
          description: 다운로드할 이미지 ID
      responses:
        200:
          description: 이미지 파일
          schema:
            type: file
        404:
          description: 이미지를 찾을 수 없음

  /download/images:
    post:
      tags:
        - Download
      summary: 여러 이미지 ZIP 다운로드
      security:
        - Bearer: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              image_ids:
                type: array
                items:
                  type: string
      responses:
        200:
          description: ZIP 파일
          schema:
            type: file
        400:
          description: 잘못된 요청

  /download/thumbnail/{image_id}:
    get:
      tags:
        - Download
      summary: 썸네일 다운로드
    description: "지정된 이미지 ID의 썸네일을 다운로드합니다."
    security:
      - Bearer: []
    parameters:
      - name: image_id
        in: path
        type: string
        required: true
        description: "썸네일을 다운로드할 이미지의 ID"
    responses:
      "200":
        description: "썸네일 다운로드 성공"
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      "400":
        description: "잘못된 요청 (예: 유효하지 않은 이미지 ID)"
        schema:
          type: object
          properties:
            message:
              type: string
              example: "유효하지 않은 요청입니다"
            error_type:
              type: string
              example: "validation_error"
      "404":
        description: "이미지를 찾을 수 없음 또는 썸네일 없음"
        schema:
          type: object
          properties:
            message:
              type: string
              example: "썸네일을 찾을 수 없습니다"
            error_type:
              type: string
              example: "file_error"
      "500":
        description: "서버 오류"
        schema:
          type: object
          properties:
            message:
              type: string
              example: "서버 오류가 발생했습니다"
            error_type:
              type: string
              example: "file_error"

  /move/images:
    post:
      tags:
        - "Images"
      summary: "이미지 이동"
      description: "지정된 프로젝트와 폴더로 이미지를 이동하고 DB 정보를 업데이트합니다."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              image_ids:
                type: array
                items:
                  type: string
                description: "이동할 이미지 ID 목록"
              target_project_id:
                type: string
                description: "대상 프로젝트의 ID"
              target_folder:
                type: string
                description: "이동할 폴더의 이름"
            required:
              - image_ids
              - target_project_id
              - target_folder
      responses:
        "200":
          description: "이미지 이동 성공"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "2개의 이미지가 이동되었습니다"
              moved_count:
                type: integer
                description: "이동된 이미지 수"
                example: 2
              failed_moves:
                type: array
                description: "이동에 실패한 이미지와 실패 이유"
                items:
                  type: object
                  properties:
                    image_id:
                      type: string
                      example: "60c72b2f9e1b8b001f1b4a8a"
                    reason:
                      type: string
                      example: "이미지를 찾을 수 없습니다"
        "400":
          description: "잘못된 요청"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "필수 파라미터가 누락되었습니다"
        "500":
          description: "서버 오류"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "파일 이동 중 오류가 발생했습니다"
  /files/bulk-delete:
    delete:
      tags:
        - Upload
      summary: "다중 파일 삭제"
      description: "지정된 이미지 ID 목록을 기반으로 다중 파일을 삭제하고 성공 및 실패한 파일 목록을 반환합니다."
      security:
        - Bearer: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              image_ids:
                type: array
                items:
                  type: string
                description: "삭제할 이미지 ID 목록"
            required:
              - image_ids
      responses:
        "200":
          description: "전체 파일 삭제 성공"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "3개의 파일이 삭제되었습니다."
              data:
                type: object
                properties:
                  deleted_count:
                    type: integer
                    example: 3
                  failed_ids:
                    type: array
                    items:
                      type: string
        "207":
          description: "부분 성공 (일부 파일만 삭제됨)"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "2개의 파일이 삭제되었고, 1개의 파일 삭제 실패."
              data:
                type: object
                properties:
                  deleted_count:
                    type: integer
                    example: 2
                  failed_ids:
                    type: array
                    items:
                      type: string
                      example: "60c72b2f9e1b8b001f1b4a8a"
        "400":
          description: "잘못된 요청 (삭제할 이미지 ID가 없는 경우)"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "삭제할 이미지 ID가 필요합니다"
        "500":
          description: "전체 실패 또는 서버 오류"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "0개의 파일이 삭제되었고, 3개의 파일 삭제 실패."
              data:
                type: object
                properties:
                  failed_ids:
                    type: array
                    items:
                      type: string
                      example: "60c72b2f9e1b8b001f1b4a8a"

  # Admin Login 관련 엔드포인트
  /admin/check-auth:
    get:
      tags:
        - "Admin Login"
      summary: 로그인 상태 확인
      security:
        - Bearer: []
      responses:
        200:
          description: 토큰 유효성 확인 성공
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Token is valid"
              user:
                type: string
                example: "admin"
              authenticated:
                type: boolean
                example: true
        401:
          description: 인증 실패

  /admin/logout:
    post:
      tags:
        - "Admin Login"
      summary: 관리자 로그아웃
      security:
        - Bearer: []
      responses:
        200:
          description: 로그아웃 성공
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              message:
                type: string
                example: "로그아웃 성공"
        401:
          description: 인증 실패
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 401
              message:
                type: string
                example: "인증 실패"

  # Unclassified Images 관련 엔드포인트
  /unclassified-images/{image_id}:
    get:
      tags:
        - Classification
      summary: 미분류 이미지 상세 정보 조회
      security:
        - Bearer: []
      parameters:
        - in: path
          name: image_id
          required: true
          type: string
          description: 이미지 ID
      responses:
        200:
          description: 이미지 상세 정보 조회 성공
          schema:
            type: object
            properties:
              _id:
                type: string
              FileName:
                type: string
              FilePath:
                type: string
              ThumnailPath:
                type: string
              ProjectInfo:
                type: object
              AnalysisFolder:
                type: string
        400:
          description: 잘못된 요청
        404:
          description: 이미지를 찾을 수 없음

  # AI Detection API
  /detect:
    post:
      tags:
        - AI Detection
      summary: AI 객체 탐지 실행
      security:
        - Bearer: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              image_ids:
                type: array
                items:
                  type: string
                description: 분석할 이미지 ID 목록
      responses:
        200:
          description: AI 탐지 성공
          schema:
            type: object
            properties:
              message:
                type: string
                example: "객체 검출이 완료되었습니다"
              data:
                type: object
                properties:
                  processed_count:
                    type: integer
                    description: 처리된 이미지 수
                  total_count:
                    type: integer
                    description: 전체 요청된 이미지 수
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        status:
                          type: string
                          enum: [Success, Failed]
                        detections:
                          type: array
                          items:
                            type: object
                            properties:
                              class:
                                type: string
                              confidence:
                                type: number
                                format: float
                        object_counts:
                          type: object
                          additionalProperties:
                            type: integer
        400:
          description: 잘못된 요청
          schema:
            $ref: '#/definitions/Error'
        500:
          description: 서버 오류
          schema:
            $ref: '#/definitions/Error'

  # Exception API
  /exception/{image_id}/status:
    put:
      tags:
        - Exception
      summary: "예외 상태 업데이트"
      description: "예외 상태와 코멘트를 업데이트합니다."
      security:
        - Bearer: []
      parameters:
        - in: path
          name: image_id
          type: string
          required: true
          description: "이미지 ID (업데이트 대상)"
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              status:
                type: string
                enum: [pending, confirmed, rejected]
                description: "새로운 예외 상태"
              comment:
                type: string
                description: "예외 상태 변경과 관련된 코멘트 (선택 사항)"
            required:
              - status
      responses:
        "200":
          description: "예외 상태 업데이트 성공"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "예외 상태가 업데이트되었습니다"
        "400":
          description: "유효하지 않은 요청 (예: 상태가 잘못되었거나 이미지가 없음)"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "유효하지 않은 예외 상태입니다"
              error_type:
                type: string
                example: "validation_error"
        "500":
          description: "서버 오류"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "DB 오류가 발생했습니다"
              error_type:
                type: string
                example: "db_error"


  /exception/bulk-update:
    post:
      tags:
        - Exception
      summary: "예외 상태 일괄 업데이트"
      description: "여러 이미지의 예외 상태를 일괄적으로 업데이트합니다."
      security:
        - Bearer: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              image_ids:
                type: array
                items:
                  type: string
                description: "업데이트할 이미지 ID 목록"
              status:
                type: string
                enum: [pending, confirmed, rejected]
                description: "새로운 예외 상태"
              comment:
                type: string
                description: "예외 상태 변경과 관련된 코멘트 (선택 사항)"
            required:
              - image_ids
              - status
      responses:
        "200":
          description: "일괄 업데이트 성공"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "2개의 이미지가 업데이트되었습니다"
              data:
                type: object
                properties:
                  modified_count:
                    type: integer
                    description: "업데이트된 이미지 개수"
                    example: 2
        "400":
          description: "잘못된 요청 (필수 필드 누락 또는 유효하지 않은 예외 상태)"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "이미지 ID와 상태값이 필요합니다"
              error_type:
                type: string
                example: "validation_error"
        "500":
          description: "서버 오류"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "DB 오류가 발생했습니다"
              error_type:
                type: string
                example: "db_error"
  # Favorite API
  /favorite/{image_id}:
    post:
      tags:
        - Favorite
      summary: "즐겨찾기 상태 토글"
      description: "지정된 이미지의 즐겨찾기 상태를 현재 상태의 반대로 변경합니다."
      security:
        - Bearer: []
      parameters:
        - in: path
          name: image_id
          type: string
          required: true
          description: "즐겨찾기 상태를 토글할 이미지의 ID"
      responses:
        "200":
          description: "즐겨찾기 상태 변경 성공"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "즐겨찾기 상태가 변경되었습니다"
              data:
                type: object
                properties:
                  is_favorite:
                    type: boolean
                    example: true
        "404":
          description: "이미지를 찾을 수 없음"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "해당 이미지를 찾을 수 없습니다"
              error_type:
                type: string
                example: "validation_error"
        "500":
          description: "서버 오류"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "DB 오류가 발생했습니다"
              error_type:
                type: string
                example: "db_error"

  /favorite/bulk:
    post:
      tags:
        - Favorite
      summary: "즐겨찾기 상태 일괄 업데이트"
      description: "여러 이미지의 즐겨찾기 상태를 일괄적으로 업데이트합니다."
      security:
        - Bearer: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              image_ids:
                type: array
                items:
                  type: string
                description: "업데이트할 이미지 ID 목록"
              is_favorite:
                type: boolean
                description: "설정할 즐겨찾기 상태 (true: 즐겨찾기 설정, false: 해제)"
            required:
              - image_ids
              - is_favorite
      responses:
        "200":
          description: "일괄 업데이트 성공"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "3개의 이미지가 업데이트되었습니다"
              data:
                type: object
                properties:
                  modified_count:
                    type: integer
                    description: "업데이트된 이미지 수"
                    example: 3
                  is_favorite:
                    type: boolean
                    description: "적용된 즐겨찾기 상태"
                    example: true
        "400":
          description: "잘못된 요청 (필수 필드 누락)"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "유효하지 않은 요청입니다"
              error_type:
                type: string
                example: "validation_error"
        "500":
          description: "서버 오류"
          schema:
            type: object
            properties:
              message:
                type: string
                example: "DB 오류가 발생했습니다"
              error_type:
                type: string
                example: "db_error"

  # Project API
  /project:
    get:
      tags:
        - Project
      summary: 프로젝트 목록 조회
      security:
        - Bearer: []
      parameters:
        - in: query
          name: status
          type: string
          required: false
          description: 프로젝트 상태 필터
        - in: query
          name: page
          type: integer
          required: false
          default: 1
        - in: query
          name: per_page
          type: integer
          required: false
          default: 10
      responses:
        200:
          description: 프로젝트 목록 조회 성공
          schema:
            type: object
            properties:
              message:
                type: string
              data:
                type: object
                properties:
                  projects:
                    type: array
                    items:
                      $ref: '#/definitions/Project'
              meta:
                $ref: '#/definitions/PaginationMeta'

    post:
      tags:
        - Project
      summary: 프로젝트 생성
      security:
        - Bearer: []
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              project_name:
                type: string
              start_date:
                type: string
                format: date
              end_date:
                type: string
                format: date
              address:
                type: string
              manager_organization:
                type: string
              memo:
                type: string
      responses:
        200:
          description: 프로젝트 생성 성공
          schema:
            type: object
            properties:
              message:
                type: string
              data:
                $ref: '#/definitions/Project'

  /project/check-name:
    get:
      tags:
        - Project
      summary: 프로젝트 이름 중복 확인
      security:
        - Bearer: []
      parameters:
        - in: query
          name: name
          type: string
          required: true
          description: 확인할 프로젝트 이름
      responses:
        200:
          description: 중복 확인 완료
          schema:
            type: object
            properties:
              message:
                type: string
              data:
                type: object
                properties:
                  exists:
                    type: boolean

definitions:
  ProcessedImage:
    type: object
    properties:
      FileName:
        type: string
        example: "20240101-123456s1.jpg"
      FilePath:
        type: string
        example: "./mnt/project123/analysis_20240101/source/20240101-123456s1.jpg"
      OriginalFileName:
        type: string
        example: "IMG_001.jpg"
      ThumnailPath:
        type: string
        example: "./mnt/project123/analysis_20240101/thumbnail/thum_20240101-123456s1.jpg"
      SerialNumber:
        type: string
        example: "CAM001"
      UserLabel:
        type: string
        example: "UNKNOWN"
      DateTimeOriginal:
        type: object
        properties:
          $date:
            type: string
            format: date-time
            example: "2024-01-01T12:34:56.000Z"
      ProjectInfo:
        $ref: '#/definitions/ProjectInfo'
      AnalysisFolder:
        type: string
        example: "analysis_20240101"
      sessionid:
        type: array
        items:
          type: string
        example: ["session_xyz789"]
      uploadState:
        type: string
        enum: ["uploaded"]
        example: "uploaded"
      serial_filename:
        type: string
        example: "CAM001_20240101-123456s1.jpg"
      evtnum:
        type: integer
        example: 1
      __v:
        type: integer
        example: 0

  ProjectInfo:
    type: object
    required:
      - _id
      - name
      - id
    properties:
      _id:
        type: string
        example: "project123"
      name:
        type: string
        example: "야생동물 프로젝트"
      id:
        type: string
        example: "WLP001"

  ErrorResponse:
    type: object
    properties:
      error:
        type: string
        example: "파일이 없습니다"

  ExifMetadata:
    type: object
    properties:
      SerialNumber:
        type: string
        example: "CAM001"
      DateTimeOriginal:
        type: string
        example: "2024:01:01 12:34:56"
      UserLabel:
        type: string
        example: "UNKNOWN"

  ImageData:
    type: object
    properties:
      _id:
        type: string
      FileName:
        type: string
      FilePath:
        type: string
      ThumnailPath:
        type: string
      SerialNumber:
        type: string
      DateTimeOriginal:
        type: object
        properties:
          $date:
            type: string
            format: date-time
      ProjectInfo:
        $ref: '#/definitions/ProjectInfo'
      is_classified:
        type: boolean

  ClassifiedImage:
    type: object
    properties:
      _id:
        type: string
      FileName:
        type: string
      FilePath:
        type: string
      ThumnailPath:
        type: string
      SerialNumber:
        type: string
      UserLabel:
        type: string
      DateTimeOriginal:
        type: string
      ProjectInfo:
        type: object
      AnalysisFolder:
        type: string
      BestClass:
        type: string
      inspection_status:
        type: string
        enum: [pending, approved, rejected]
      inspection_date:
        type: string
        format: date-time

  ClassificationInfo:
    type: object
    properties:
      best_class:
        type: string
      best_probability:
        type: number
        format: float
      name:
        type: string
      bbox:
        type: array
        items:
          type: number
          format: float
      new_bbox:
        type: array
        items:
          type: number
          format: float

  Error:
    type: object
    properties:
      message:
        type: string
      error_type:
        type: string

  ExceptionStatus:
    type: string
    enum: [pending, confirmed, rejected]
    description: 예외 처리 상태

  Project:
    type: object
    properties:
      _id:
        type: string
      project_name:
        type: string
      start_date:
        type: string
        format: date
      end_date:
        type: string
        format: date
      address:
        type: string
      manager_name:
        type: string
      manager_email:
        type: string
      manager_organization:
        type: string
      memo:
        type: string
      status:
        type: string
        enum: ['준비 중', '준비 완료']
      progress:
        type: integer
      created_at:
        type: string
        format: date-time
      created_by:
        type: string
      updated_at:
        type: string
        format: date-time

  PaginationMeta:
    type: object
    properties:
      total:
        type: integer
      page:
        type: integer
      per_page:
        type: integer
      total_pages:
        type: integer

components:
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
      description: "JWT 토큰을 입력하세요. 예: Bearer {token}"

security:
  - Bearer: []

x-components:
  parameters:
    MaxFileSize:
      name: MAX_FILE_SIZE
      in: header
      description: 최대 파일 크기 (10MB)
      required: false
      type: integer
      default: 10485760
    ThumbnailSize:
      name: THUMBNAIL_SIZE
      in: header
      description: 썸네일 이미지 크기
      required: false
      type: array
      items:
        type: integer
      default: [200, 200]
    GroupTimeLimit:
      name: GROUP_TIME_LIMIT
      in: header
      description: 이미지 그룹화 시간 제한 (분)
      required: false
      type: integer
      default: 5